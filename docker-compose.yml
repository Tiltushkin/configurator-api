version: "3.9"

services:
  db:
    image: postgres:16
    container_name: pcconf_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pc_configurator
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pc_configurator"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - dbdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: pcconf_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: .
      dockerfile: src/PcConfigurator.Api/Dockerfile
    container_name: pcconf_api
    ports:
      - "5051:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ConnectionStrings__Postgres: "Host=db;Port=5432;Database=pc_configurator;Username=postgres;Password=postgres"
      ConnectionStrings__Redis: "redis:6379"
      Cors__AllowedOrigins__0: "http://localhost:5173"
      Cors__AllowedOrigins__1: "http://localhost:3000"
      Jwt__Issuer: "PcConfigurator"
      Jwt__Audience: "PcConfigurator.Client"
      Jwt__Key: "PLEASE_REPLACE_WITH_A_LONG_RANDOM_SECRET_KEY______________________________"
      Jwt__ExpiresMinutes: "120"
      Swagger__Enabled: "true"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  dbdata:
